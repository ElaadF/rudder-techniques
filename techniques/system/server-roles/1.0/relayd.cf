#####################################################################################
# Copyright 2019 Normation SAS
#####################################################################################
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, Version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#####################################################################################

bundle agent rudder_relayd_configuration {
  vars:
      "config_file" string => "/opt/rudder/etc/rudder-relayd.conf";
      "service"     string => "rudder-relayd";
      "component"   string => "Relayd service configuration";

      "file_class_prefix" string => canonify("file_key_value_present_in_ini_section_${config_file}");

  methods:
      "any" usebundle => disable_reporting;
      "any" usebundle => _method_reporting_context("${component}", "None");

      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "general", "nodes_list_file", "\"${g.rudder_base}/etc/nodeslist.json\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "general", "node_id", "\"${g.uuid}\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.inventory", "directory", "\"/var/rudder/inventories\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.reporting", "directory", "\"/var/rudder/reports\"");

    root_server::
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.inventory", "output", "\"disabled\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.reporting", "output", "\"database\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "output.database", "url", "\"postgres://rudder:${p.psql_password[2]}@localhost/rudder\"");

    policy_server.!root_server::
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.inventory", "output", "\"upstream\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "processing.reporting", "output", "\"upstream\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "output.upstream", "url", "\"https://${server_info.policy_server}\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "output.upstream", "user", "\"${g.davuser}\"");
      "any" usebundle => file_key_value_present_in_ini_section("${config_file}", "output.upstream", "password", "\"${g.davpw}\"");

    any::
      "any" usebundle => service_restart("rudder-relayd"),
                   if => "${file_class_prefix}_repaired";

      "any" usebundle => enable_reporting;
      "any" usebundle => rudder_common_reports_generic("server-roles", "${file_class_prefix}", "${server_roles_common.directiveId}", "${component}", "None", "rudder-relayd configration");
      "any" usebundle => rudder_common_report("server-roles", "log_repaired", "${server_roles_common.directiveId}", "${component}", "None", "rudder-relayd service has been restarted"),
                   if => "service_restart_rudder_relayd_repaired";
}
