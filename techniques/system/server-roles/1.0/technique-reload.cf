# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2021 Normation SAS

bundle agent root_technique_reload
{

  vars:

      "root_technique_reload_rest_url" string => "http://localhost:8080/rudder/api/techniqueLibrary/reload";

  classes:

      "root_technique_reload_trigger" expression => fileexists("${g.rudder_base}/etc/force_technique_reload");

    any::
      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

  files:

    root_technique_reload_rest_call_repaired::
      "${g.rudder_base}/etc/force_technique_reload"
        delete => tidy,
        comment => "Deleting the force_technique_reload file because it is no longer relevant";

  methods:

    pass3.root_technique_reload_trigger::

      "any" usebundle => rudder_common_report("server-roles", "log_info", "${server_roles_common.directiveId}", "Check Technique library reloading file", "None", "The ${g.rudder_base}/etc/force_technique_reload file is present. Reloading Technique library...");

    pass3.root_technique_reload_rest_call_repaired::

      "any" usebundle => rudder_common_report("server-roles", "log_repaired", "${server_roles_common.directiveId}", "Check Technique library reloading file", "None", "The Technique library has been reloaded.");

    pass3.root_technique_reload_rest_call_failed::

      "any" usebundle => rudder_common_report("server-roles", "log_warn", "${server_roles_common.directiveId}", "Check Technique library reloading file", "None", "The Technique library failed to reload. Will try again next time.");

  commands:

    root_technique_reload_trigger::

      "${g.rudder_curl} --proxy '' -s ${root_technique_reload_rest_url} |/bin/grep -q OK"
        contain => in_shell_and_silent,
        classes => classes_generic("root_technique_reload_rest_call"),
        comment => "Reload the Technique library using the Rudder API";

}
