bundle agent apache_acl
{

  vars:
      "technique_name"     string => "DistributePolicy";
      "trackingkey"        string => "${distribute_policy_common.directiveId}";
      "component"          string => "Configure apache ACL";

      "ssl_ca_file"        string => "nodescerts.pem";

      "dummy_certificate"  string => "${g.rudder_var}/lib/ssl/${ssl_ca_file}";
      "webapp_certificate" string => "${g.rudder_base}/etc/ssl/ca.cert";

      "default_rudder_ca"  string => "${g.rudder_base}/etc/ssl/rudder.crt";
      "override_rudder_ca" string => "${this.promise_dirname}/${ssl_ca_file}";

      "ssl_ca_size"        string => filestat("${override_rudder_ca}", "size");

    pass1::
      "src_ca_file" string => "${override_rudder_ca}",
                ifvarclass => "!empty_ssl_ca";
      "src_ca_file" string => "${default_rudder_ca}",
                ifvarclass => "empty_ssl_ca";

  classes:
      "empty_ssl_ca" expression => strcmp("${ssl_ca_size}", "0");

      "pass3" expression => "pass2";
      "pass2" expression => "pass1";
      "pass1" expression => "any";

    pass2::
      "don_t_check_permission" expression => islink("${src_ca_file}");

  files:
    pass2::
      # For relayd, should move into relayd config after merging distributPolicy into serverRoles
      # This certificate does not seem to be used explicitly but Apache seems to expect it to exist.
      "${dummy_certificate}"
        copy_from         => ncf_local_cp_method("${src_ca_file}", "digest"),
        move_obstructions => "true",
        classes           => classes_generic("rudder_apache_acl"),
        comment           => "Writing rudder apache ACL";

 # Reporting and apache restart is in network-check.cf, see https://issues.rudder.io/issues/16553


  methods:
    pass2::
      # For compatibility with apache config
      "any" usebundle => _method_reporting_context("${Component}", "Apache ACL");
      "any" usebundle => file_from_local_source_recursion("${src_ca_file}", "${webapp_certificate}", "0");
    pass2.!don_t_check_permission::
      "any" usebundle => _method_reporting_context("${Component}", "Permissions");
      "any" usebundle => permissions("${destinations}", "600", "root", "0");
    pass2.don_t_check_permission::
      "any" usebundle => rudder_common_report("${technique_name}", "result_success", "${trackingkey}", "${component}", "Permissions", "Apache ACLs are correct");

    rudder_apache_acl_ok.!rudder_apache_acl_repaired.!rudder_apache_acl_error::
      "any" usebundle => rudder_common_report("${technique_name}", "result_success", "${trackingkey}", "${component}", "Relayd ACL", "Apache ACLs are correct");

    rudder_apache_acl_repaired.!rudder_apache_acl_error::
      "any" usebundle => rudder_common_report("${technique_name}", "result_repaired", "${trackingkey}", "${component}", "Relayd ACL", "Apache ACLs have been repaired");

    rudder_apache_acl_error::
      "any" usebundle => rudder_common_report("${technique_name}", "result_error", "${trackingkey}", "${component}", "Relayd ACL", "Apache ACLs could not be edited");
}
